user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Redirección HTTP -> HTTPS
    server {
        listen 80;
        server_name mecologicodavidmarin.com www.mecologicodavidmarin.com;
        return 301 https://$host$request_uri;
    }

    # HTTPS con certificados SSL y SPA Angular + Proxies
    server {
        listen 443 ssl;
        server_name mecologicodavidmarin.com www.mecologicodavidmarin.com;

        ssl_certificate     /etc/letsencrypt/live/mecologicodavidmarin.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mecologicodavidmarin.com/privkey.pem;

        root /usr/share/nginx/html;
        index index.html;

        # Rutas frontend Angular
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy microservicio Catálogo
        location /catalogoServer/api/ {
            proxy_pass http://localhost:8087/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy microservicio Producto
        location /productoServer/api/ {
            proxy_pass http://localhost:8088/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy microservicio Cliente
        location /clienteServer/api/ {
            proxy_pass http://localhost:8089/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Archivos estáticos con caché
        location ~* \.(?:css|js|map|png|jpg|jpeg|gif|ico|woff2?)$ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }
    }
}
